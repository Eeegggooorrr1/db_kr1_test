"""dd

Revision ID: 9e7b6833615d
Revises: 4228895e9d33
Create Date: 2025-09-11 21:16:54.217577

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9e7b6833615d'
down_revision: Union[str, Sequence[str], None] = '4228895e9d33'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('annotations')
    op.drop_table('runs')
    op.drop_table('experiments')
    op.drop_table('images')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
    sa.Column('image_id', sa.INTEGER(), server_default=sa.text("nextval('images_image_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('original_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('attack_type', postgresql.ENUM('no_attack', 'blur', 'noise', 'adversarial', 'other', name='attack_type_enum'), autoincrement=False, nullable=False),
    sa.Column('added_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['runs.run_id'], name='images_run_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('image_id', name='images_pkey'),
    sa.UniqueConstraint('file_path', name='images_file_path_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('experiments',
    sa.Column('experiment_id', sa.INTEGER(), server_default=sa.text("nextval('experiments_experiment_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_date', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('experiment_id', name='experiments_pkey'),
    sa.UniqueConstraint('name', name='experiments_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('runs',
    sa.Column('run_id', sa.INTEGER(), server_default=sa.text("nextval('runs_run_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('experiment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('run_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('precision', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.experiment_id'], name='runs_experiment_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('run_id', name='runs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('annotations',
    sa.Column('annotation_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('coordinates', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['images.image_id'], name=op.f('annotations_image_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('annotation_id', name=op.f('annotations_pkey'))
    )
    # ### end Alembic commands ###
